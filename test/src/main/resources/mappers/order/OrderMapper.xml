<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssg.test.api.order.mapper.OrderMapper">

    <!-- 재고 보유 여부 조회 -->
    <select id="getGoodsInfo" resultType="com.ssg.test.api.order.domain.GoodsInfoDTO">
        SELECT
            DECODE(COUNT(1), 0, 'N', 'Y') AS STOCK_YN
            , SALE_PRICE
            , DISCOUNT_PRICE
            , GOODS_NM
            , GOODS_ID
        FROM
            GOODS_DTL
        WHERE
            GOODS_ID = #{goodsId}
        GROUP BY
            SALE_PRICE
            , DISCOUNT_PRICE
            , GOODS_NM
            , GOODS_ID
    </select>

    <!-- 주문 시퀀스 조회 -->
    <select id="getOrderNumSeq" resultType="String">
        SELECT
            LPAD(NEXT VALUE FOR ORDER_NUM_SEQ, 6, '0')
        FROM
            DUAL
    </select>

    <!-- 주문 정보 생성 -->
    <insert id="insertOrderInfo">
        INSERT INTO ORDER_DTL(
            ORDER_NUM
            , ORDER_SEQ
            , ORDER_QTY
            , GOODS_ID
            , GOODS_NM
            , ORDER_STATUS
            , SALE_PRICE
            , DISCOUNT_PRICE
            , ORDER_DTTM
        ) VALUES (
            #{orderNum}
            , #{or.orderSeq}
            , #{or.orderQty}
            , #{or.goodsId}
            , #{or.goodsNm}
            , #{or.orderStatus}
            , #{or.salePrice}
            , #{or.discountPrice}
            , #{or.orderDttm}
        )
    </insert>

    <!-- 결제 정보 생성 -->
    <insert id="insertPayInfo">
        INSERT INTO PAY_DTL(
            ORDER_NUM
            , PAY_SEQ
            , PAY_AMOUNT
        ) VALUES (
            #{orderNum}
            , #{paySeq}
            , #{payAmount}
        )
    </insert>

    <!-- 주문 상품 정보 조회 -->
    <select id="getOrderGoods" resultType="com.ssg.test.api.order.domain.OrderListGoodsDTO">
        SELECT
            GOODS_ID
            , SUM(ORDER_QTY) AS ORDER_QTY
            , GOODS_NM
            , ORDER_STATUS
            , (SALE_PRICE - DISCOUNT_PRICE) AS GOODS_PRICE
        FROM
            ORDER_DTL
        WHERE
            ORDER_NUM = #{orderNum}
        GROUP BY
            GOODS_ID
            , GOODS_NM
            , ORDER_STATUS
            , (SALE_PRICE - DISCOUNT_PRICE)
    </select>

    <!-- 취소시 결제 정보 업데이트 -->
    <update id="updatePayInfo">
        UPDATE
            PAY_DTL
        SET
            PAY_AMOUNT = PAY_AMOUNT - #{cancelAmount}
        WHERE
            ORDER_NUM = #{pay.orderNum}
            AND PAY_SEQ = #{pay.paySeq}
    </update>

    <!-- 결제 총 금액 조회 -->
    <select id="getRemainOrderPrice" resultType="Long">
        SELECT
            SUM(PAY_AMOUNT)
        FROM
            PAY_DTL
        WHERE
            ORDER_NUM = #{orderNum}
    </select>

    <!-- 재고 환원 -->
    <update id="updateGoodsStock">
        UPDATE
            GOODS_DTL
        SET
            STOCK_QTY = STOCK_QTY + #{qty}
        WHERE
            GOODS_ID = #{goodsId}
    </update>
</mapper>